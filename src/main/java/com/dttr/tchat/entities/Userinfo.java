package com.dttr.tchat.entities;
// Generated Jan 28, 2019 12:43:14 PM by Hibernate Tools 5.2.11.Final

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;

import com.fasterxml.jackson.annotation.JsonIgnore;


/**
 * Userinfo generated by hbm2java
 */
@Entity
@Table(name = "userinfo", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class Userinfo implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer userid;
	private Boolean isonline;
	private String username;
	@Column(name = "avatarurl")
	
	private String avatarUrl;
	private String password;

	@JsonIgnore
	private Set<UserHasChat> userHasChats = new HashSet<UserHasChat>(0);
	@JsonIgnore
	private Set<Message> messages = new HashSet<Message>(0);
	@JsonIgnore
	private Set<UserHasMessage> userHasMessages = new HashSet<UserHasMessage>(0);

	public Userinfo() {
		this.isonline=false;
	}

	public Userinfo(Boolean isonline, String password, String username, 
			Set<UserHasChat> userHasChats, Set<Message> messages,
			Set<UserHasMessage> userHasMessages) {
		this.isonline = isonline;
		this.password = password;
		this.username = username;
		this.userHasChats = userHasChats;
		this.messages = messages;
		this.userHasMessages = userHasMessages;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "userid", unique = true, nullable = false)
	public Integer getUserid() {
		return this.userid;
	}

	public void setUserid(Integer userid) {
		this.userid = userid;
	}

	@Column(name = "isonline")
	public Boolean getIsonline() {
		return this.isonline;
	}

	public void setIsonline(Boolean isonline) {
		this.isonline = isonline;
	}

	@Column(name = "password", length = 200)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "username", unique = true, length = 40)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}



	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userinfo")
	public Set<UserHasChat> getUserHasChats() {
		return this.userHasChats;
	}

	public void setUserHasChats(Set<UserHasChat> userHasChats) {
		this.userHasChats = userHasChats;
	}



	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userinfo")
	public Set<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(Set<Message> messages) {
		this.messages = messages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userinfo")
	public Set<UserHasMessage> getUserHasMessages() {
		return this.userHasMessages;
	}

	public void setUserHasMessages(Set<UserHasMessage> userHasMessages) {
		this.userHasMessages = userHasMessages;
	}
	@Transient
	public List<GrantedAuthority> getAuthorities() {
		List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();
		authorities.add(new SimpleGrantedAuthority("MEMBER"));
		return authorities;
	}

	/**
	 * @return the avatarurl
	 */
	public String getAvatarurl() {
		return avatarUrl;
	}

	/**
	 * @param avatarurl the avatarurl to set
	 */
	public void setAvatarurl(String avatarurl) {
		this.avatarUrl = avatarurl;
	}
}
